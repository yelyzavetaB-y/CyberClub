@model CyberClub.ViewModels.BookingViewModel
@{
    Layout = "~/Views/Customer/_CustomerLayout.cshtml";
}

<h2 class="text-white">Choose a seat</h2>

@if (Model?.Seats?.Any() == true)
{
    @(await Component.InvokeAsync("SeatMap", new { seats = Model.Seats }))
}
else
{
    <p class="text-warning">Choose date, time, duration and zone to see available seats.</p>
}





@section Scripts {
    <script>
        async function fetchSeats() {
            const zoneId = document.querySelector('[name="SelectedZoneId"]')?.value;
            const date = document.querySelector('[name="SelectedDate"]')?.value;
            const time = document.querySelector('[name="SelectedTime"]')?.value;
            const duration = document.querySelector('[name="Duration"]')?.value;

            if (!zoneId || !date || !time || !duration) {
                console.warn("Missing data");
                return;
            }

            const startTime = `${date} ${time}:00`;

            try {
                const response = await fetch(`/Customer/GetSeatsByZone?zoneId=${zoneId}&startTime=${encodeURIComponent(startTime)}&duration=${duration}`);
                if (!response.ok) {
                    console.error("❌ Failed to load seats:", response.status);
                    return;
                }

                const data = await response.json();
                const seatMapContainer = document.getElementById("seat-map-container");
                seatMapContainer.innerHTML = "";

                if (data.length === 0) {
                    seatMapContainer.innerHTML = "<p>No seats available.</p>";
                    return;
                }

                data.forEach(seat => {
                    const div = document.createElement("div");
                    div.classList.add("seat");
                    div.textContent = seat.seatNumber;

                    if (seat.isAvailable) {
                        div.classList.add("available");
                        div.dataset.seatId = seat.seatID;

                        div.addEventListener("click", () => {
                            document.querySelectorAll(".seat.available.selected").forEach(s => s.classList.remove("selected"));
                            div.classList.add("selected");
                            document.getElementById("SelectedSeatId").value = seat.seatID;
                        });
                    } else {
                        div.classList.add("unavailable");
                    }

                    seatMapContainer.appendChild(div);
                });

            } catch (err) {
                console.error("❌ fetchSeats error:", err);
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            ["SelectedZoneId", "SelectedDate", "SelectedTime", "Duration"].forEach(id => {
                const el = document.querySelector(`[name="${id}"]`);
                if (el) el.addEventListener("change", fetchSeats);
            });
        });
    </script>


}
